.TH "entites.Jeu" 3 "La lÃ©gende Kaizoku: poudre noire et rhum dorÃ©" \" -*- nroff -*-
.ad l
.nh
.SH NAME
entites.Jeu
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBJeu\fP (\fBIAffichage\fP \fBaffichage\fP)"
.br
.RI "Constructeur du jeu avec affichage spécifié\&. "
.ti -1c
.RI "void \fBstart\fP ()"
.br
.RI "Commence et exécute le cycle de jeu jusqu'à ce qu'un gagnant soit déterminé\&. "
.ti -1c
.RI "\fBPirate\fP[] \fBgetPirates\fP ()"
.br
.ti -1c
.RI "void \fBdeplacerPirate\fP (\fBPirate\fP pirate, int valeurDe)"
.br
.RI "Déplace un pirate sur le plateau en fonction du résultat d'un lancer de dé\&. "
.ti -1c
.RI "void \fBterminerJeu\fP (\fBPirate\fP pirate)"
.br
.ti -1c
.RI "boolean \fBengagerDuel\fP (\fBPirate\fP pirate1, \fBPirate\fP pirate2)"
.br
.RI "Engage un duel entre deux pirates lorsqu'ils se rencontrent sur le plateau\&. "
.ti -1c
.RI "void \fBverifierEtRetirerPiratesMorts\fP ()"
.br
.ti -1c
.RI "\fBIAffichage\fP \fBgetAffichage\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBverifierTresorTrouve\fP (\fBPirate\fP pirate)"
.br
.RI "Détermine si un pirate a trouvé le trésor et termine le jeu si c'est le cas\&. "
.ti -1c
.RI "void \fBverifierDernierPirateRestant\fP ()"
.br
.ti -1c
.RI "int \fBcalculerNouvellePosition\fP (int positionActuelle, int deplacement)"
.br
.ti -1c
.RI "void \fBchoisirJoueursEtPirates\fP ()"
.br
.RI "Génère les joueurs et assigne des pirates et des couleurs\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fBnbJoueurs\fP =2"
.br
.ti -1c
.RI "\fBPirate\fP[] \fBlistePirates\fP"
.br
.ti -1c
.RI "\fBPlateau\fP \fBplateau\fP = new \fBPlateau\fP()"
.br
.ti -1c
.RI "\fBDe\fP \fBde\fP"
.br
.ti -1c
.RI "\fBIAffichage\fP \fBaffichage\fP"
.br
.ti -1c
.RI "boolean \fBjeuTermine\fP = false"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "entites\&.Jeu\&.Jeu (\fBIAffichage\fP affichage)"

.PP
Constructeur du jeu avec affichage spécifié\&. 
.PP
\fBParameters\fP
.RS 4
\fIaffichage\fP L'interface d'affichage utilisée pour interagir avec l'utilisateur\&.
.RE
.PP
Initialise le jeu avec un dé, et l'interface d'affichage fournie\&. 
.SH "Member Function Documentation"
.PP 
.SS "int entites\&.Jeu\&.calculerNouvellePosition (int positionActuelle, int deplacement)\fR [private]\fP"

.SS "void entites\&.Jeu\&.choisirJoueursEtPirates ()\fR [private]\fP"

.PP
Génère les joueurs et assigne des pirates et des couleurs\&. Demande à l'utilisateur de choisir des noms de pirates et des couleurs pour chaque joueur, initialisant ainsi les joueurs du jeu\&. 
.SS "void entites\&.Jeu\&.deplacerPirate (\fBPirate\fP pirate, int valeurDe)"

.PP
Déplace un pirate sur le plateau en fonction du résultat d'un lancer de dé\&. 
.PP
\fBParameters\fP
.RS 4
\fIpirate\fP Le pirate à déplacer\&. 
.br
\fIvaleurDe\fP Le nombre de cases à déplacer le pirate\&.
.RE
.PP
Calcule la nouvelle position du pirate sur le plateau, applique les effets de la case atteinte, et vérifie les conditions de fin de jeu\&. 
.SS "boolean entites\&.Jeu\&.engagerDuel (\fBPirate\fP pirate1, \fBPirate\fP pirate2)"

.PP
Engage un duel entre deux pirates lorsqu'ils se rencontrent sur le plateau\&. 
.PP
\fBParameters\fP
.RS 4
\fIpirate1\fP Le premier pirate\&. 
.br
\fIpirate2\fP Le second pirate\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Un booléen indiquant si un duel a eu lieu\&.
.RE
.PP
Compare la force des armes des pirates et détermine le vainqueur du duel\&. Le pirate perdant subit une perte de points de vie\&. 
.SS "\fBIAffichage\fP entites\&.Jeu\&.getAffichage ()"

.SS "\fBPirate\fP[] entites\&.Jeu\&.getPirates ()"

.SS "void entites\&.Jeu\&.start ()"

.PP
Commence et exécute le cycle de jeu jusqu'à ce qu'un gagnant soit déterminé\&. Cette méthode gère la séquence complète du jeu, incluant le choix des joueurs et des pirates, les déplacements sur le plateau, les duels, et la vérification des conditions de victoire\&. 
.SS "void entites\&.Jeu\&.terminerJeu (\fBPirate\fP pirate)"

.SS "void entites\&.Jeu\&.verifierDernierPirateRestant ()\fR [private]\fP"

.SS "void entites\&.Jeu\&.verifierEtRetirerPiratesMorts ()"

.SS "void entites\&.Jeu\&.verifierTresorTrouve (\fBPirate\fP pirate)\fR [private]\fP"

.PP
Détermine si un pirate a trouvé le trésor et termine le jeu si c'est le cas\&. 
.PP
\fBParameters\fP
.RS 4
\fIpirate\fP Le pirate à vérifier\&.
.RE
.PP
Si le pirate a atteint ou dépassé la dernière case du plateau, le jeu est terminé, et ce pirate est déclaré gagnant\&. 
.SH "Member Data Documentation"
.PP 
.SS "\fBIAffichage\fP entites\&.Jeu\&.affichage\fR [private]\fP"

.SS "\fBDe\fP entites\&.Jeu\&.de\fR [private]\fP"

.SS "boolean entites\&.Jeu\&.jeuTermine = false\fR [private]\fP"

.SS "\fBPirate\fP [] entites\&.Jeu\&.listePirates\fR [private]\fP"

.SS "int entites\&.Jeu\&.nbJoueurs =2\fR [private]\fP"

.SS "\fBPlateau\fP entites\&.Jeu\&.plateau = new \fBPlateau\fP()\fR [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for La lÃ©gende Kaizoku: poudre noire et rhum dorÃ© from the source code\&.
